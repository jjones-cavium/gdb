#   Copyright 2007 Cavium Networks, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
#
# Test Control-C.
#
if ![istarget "mipsisa64-octeon-*"] then {
  return -1;
}

set testfile "ctrl-c"
set srcfile ${testfile}.c
set binfile ${testfile}.out

# build simple exec app
set binfile [ cvmx_compile $binfile $srcdir/$subdir $srcfile "" "-g" "" "" ]

if { $binfile == "" } {
  fail "compilation"
  return;
}

pass "compilation"

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

gdb_test "break main" \
    "Breakpoint.*at.* file .*$srcfile, line.*" \
    "breakpoint function"

gdb_run_cmd
gdb_expect {
     -re ".*Breakpoint \[0-9\]+, .*main.*$gdb_prompt $" {
	pass "run to breakpoint"
     }
    -re ".*$gdb_prompt" {
	fail "run to breakpoint"
    }
    timeout { fail "run to breakpoint (timeout)" }
}

gdb_test "disable 1"

send_gdb "continue\n"
gdb_expect 30 {
	-re ".*Continuing\\..*" {
	    pass "continue"
	}
	-re ".*$gdb_prompt $" {
	    fail "continue"
	}
	timeout { fail "continue (timeout)" }
}

sleep 1
send_ctrl_c
gdb_expect 30 {
	-re " at .*$gdb_prompt $" {
	    pass "send_gdb control C"
	}
	-re " in .*$gdb_prompt $" {
	    pass "send_gdb control C"
	}
	-re "Interrupted while waiting for the program.*Give up.*" {
	    send_gdb "y\n"
	    fail "send_gdb control C"
	}
	-re ".*$gdb_prompt $" { fail "send_gdb control C" }
	timeout { fail "send_gdb control C (timeout)" }
}

# See if we can continue after control-C interrupt.
send_gdb "continue\n"
gdb_expect 30 {
	-re ".*Continuing\\..*" {
	    pass "continue second time"
	}
	-re ".*$gdb_prompt $" {
	    fail "continue second time"
	}
	timeout { fail "continue second time (timeout)" }
}

sleep 1
send_ctrl_c
gdb_expect 30 {
	-re " at .*$gdb_prompt $" {
	    pass "send_gdb control C second time"
	}
	-re " in .*$gdb_prompt $" {
	    pass "send_gdb control C second time"
	}
	-re "Interrupted while waiting for the program.*Give up.*" {
	    send_gdb "y\n"
	    fail "send_gdb control C second time"
	}
	-re ".*$gdb_prompt $" { fail "send_gdb control C second time" }
	timeout { fail "send_gdb control C second time (timeout)" }
}
